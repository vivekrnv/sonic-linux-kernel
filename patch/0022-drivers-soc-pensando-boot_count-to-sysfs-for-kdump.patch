From d4756c034d6215f5abcf5d6c9d8c7da1a392a313 Mon Sep 17 00:00:00 2001
From: Shantanu Shrivastava <shanshri@amd.com>
Date: Tue, 24 Oct 2023 10:31:58 +0000
Subject: [PATCH] drivers/soc/pensando:boot_count to sysfs for kdump log

Add boot_count to sysfs. Augment the kdump timestamp with
the boot_count number. Also, adjust the kdump timestamp.

Signed-off-by: David Clear <dclear@amd.com>
Signed-off-by: Shantanu Shrivastava <shanshri@amd.com>
---
 drivers/soc/pensando/cap_crash.c  |  4 +++-
 drivers/soc/pensando/cap_reboot.c | 35 +++++++++++++++++++++++++++++--
 drivers/soc/pensando/cap_reboot.h |  3 ++-
 3 files changed, 38 insertions(+), 4 deletions(-)

diff --git a/drivers/soc/pensando/cap_crash.c b/drivers/soc/pensando/cap_crash.c
index dbe8344d7..c8d2852ea 100644
--- a/drivers/soc/pensando/cap_crash.c
+++ b/drivers/soc/pensando/cap_crash.c
@@ -12,6 +12,7 @@
 #include <linux/panic_notifier.h>
 #include <linux/of.h>
 #include <linux/of_address.h>
+#include "cap_reboot.h"
 
 #define PCRASH_NAME	"pensando-crash"
 
@@ -114,7 +115,8 @@ static int cap_panic_callback(struct notifier_block *nb,
 
 	ktime_get_real_ts64(&ts);
 	time64_to_tm(ts.tv_sec, 0, &tm);
-	pr_info("Panic on %04ld-%02d-%02d %02d:%02d:%02d.%06ld\n",
+	pr_info("Panic at Boot #%lu %04ld-%02d-%02d %02d:%02d:%02d.%06ld\n",
+		cap_boot_count(),
 		tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday,
 		tm.tm_hour, tm.tm_min, tm.tm_sec,
 		ts.tv_nsec / 1000);
diff --git a/drivers/soc/pensando/cap_reboot.c b/drivers/soc/pensando/cap_reboot.c
index 42d87f242..d2e1ebf91 100644
--- a/drivers/soc/pensando/cap_reboot.c
+++ b/drivers/soc/pensando/cap_reboot.c
@@ -2,7 +2,7 @@
 /*
  * Pensando reboot control via sysfs
  *
- * Copyright (c) 2020-2021, Pensando Systems Inc.
+ * Copyright (c) 2020-2022, Pensando Systems Inc.
  */
 
 #include <linux/string.h>
@@ -18,12 +18,22 @@
  */
 static int panic_reboot;	/* default=0, no reboot */
 
+/* value of system "boot_count" for panic logging */
+static unsigned long boot_count;
+
 bool cap_panic_reboot(void)
 {
 	if (panic_reboot)
 		return true;
 	return false;
 }
+EXPORT_SYMBOL_GPL(cap_panic_reboot);
+
+unsigned long cap_boot_count(void)
+{
+	return boot_count;
+}
+EXPORT_SYMBOL_GPL(cap_boot_count);
 
 extern struct kobject *pensando_fw_kobj_get(void);
 struct kobject *reboot_kobj;
@@ -45,11 +55,32 @@ static ssize_t panic_reboot_store(struct kobject *kobj,
 	return count;
 }
 
+static ssize_t boot_count_show(struct kobject *kobj,
+			       struct kobj_attribute *attr, char *buf)
+{
+	return sprintf(buf, "%lu\n", boot_count);
+}
+
+static ssize_t boot_count_store(struct kobject *kobj,
+				struct kobj_attribute *attr,
+				const char *buf, size_t count)
+{
+	int ret;
+
+	ret = kstrtoul(buf, 0, &boot_count);
+	if (ret)
+		return ret;
+	return count;
+}
+
 static struct kobj_attribute panic_reboot_attribute =
-	__ATTR(panic_reboot, 0664, panic_reboot_show, panic_reboot_store);
+	__ATTR(panic_reboot, 0644, panic_reboot_show, panic_reboot_store);
+static struct kobj_attribute boot_count_attribute =
+	__ATTR(boot_count, 0644, boot_count_show, boot_count_store);
 
 static struct attribute *attrs[] = {
 	&panic_reboot_attribute.attr,
+	&boot_count_attribute.attr,
 	NULL,
 };
 
diff --git a/drivers/soc/pensando/cap_reboot.h b/drivers/soc/pensando/cap_reboot.h
index 8718fff85..e4bd89afe 100644
--- a/drivers/soc/pensando/cap_reboot.h
+++ b/drivers/soc/pensando/cap_reboot.h
@@ -1,11 +1,12 @@
 /* SPDX-License-Identifier: GPL-2.0 */
 /*
- * Copyright (c) 2020-2021, Pensando Systems Inc.
+ * Copyright (c) 2020-2022, Pensando Systems Inc.
  */
 
 #ifndef __CAP_REBOOT_H__
 #define __CAP_REBOOT_H__
 
 bool cap_panic_reboot(void);
+unsigned long cap_boot_count(void);
 
 #endif
-- 
2.39.2

